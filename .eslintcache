[{"D:\\react-cryptocurrency-app\\src\\index.js":"1","D:\\react-cryptocurrency-app\\src\\App.js":"2","D:\\react-cryptocurrency-app\\src\\API\\Api.js":"3","D:\\react-cryptocurrency-app\\src\\Containers\\Navbar.js":"4","D:\\react-cryptocurrency-app\\src\\Containers\\CoinsList.js":"5","D:\\react-cryptocurrency-app\\src\\Containers\\Coin.js":"6","D:\\react-cryptocurrency-app\\src\\Containers\\SingleCoin.js":"7","D:\\react-cryptocurrency-app\\src\\Store\\store.js":"8","D:\\react-cryptocurrency-app\\src\\Store\\Reducers\\RootReducer.js":"9","D:\\react-cryptocurrency-app\\src\\Store\\Reducers\\index.js":"10","D:\\react-cryptocurrency-app\\src\\Store\\Actions\\ActionType.js":"11","D:\\react-cryptocurrency-app\\src\\Store\\Sagas\\index.js":"12","D:\\react-cryptocurrency-app\\src\\Store\\Sagas\\coinlist-saga.js":"13","D:\\react-cryptocurrency-app\\src\\API\\Services.js":"14","D:\\react-cryptocurrency-app\\src\\Store\\Actions\\Actions.js":"15","D:\\react-cryptocurrency-app\\src\\Components\\Paginate.js":"16","D:\\react-cryptocurrency-app\\src\\Components\\Autosuggest.js":"17"},{"size":500,"mtime":1623578120446,"results":"18","hashOfConfig":"19"},{"size":657,"mtime":1626110341907,"results":"20","hashOfConfig":"19"},{"size":246,"mtime":1623179500988,"results":"21","hashOfConfig":"19"},{"size":1518,"mtime":1626110341965,"results":"22","hashOfConfig":"19"},{"size":5543,"mtime":1626110341944,"results":"23","hashOfConfig":"19"},{"size":3691,"mtime":1626110341931,"results":"24","hashOfConfig":"19"},{"size":9730,"mtime":1626110341979,"results":"25","hashOfConfig":"19"},{"size":500,"mtime":1623580125217,"results":"26","hashOfConfig":"19"},{"size":191,"mtime":1623579319985,"results":"27","hashOfConfig":"19"},{"size":2208,"mtime":1625411437444,"results":"28","hashOfConfig":"19"},{"size":592,"mtime":1625410027661,"results":"29","hashOfConfig":"19"},{"size":239,"mtime":1623579993354,"results":"30","hashOfConfig":"19"},{"size":1528,"mtime":1625411256671,"results":"31","hashOfConfig":"19"},{"size":1158,"mtime":1625483491434,"results":"32","hashOfConfig":"19"},{"size":1223,"mtime":1625411238905,"results":"33","hashOfConfig":"19"},{"size":754,"mtime":1625128555442,"results":"34","hashOfConfig":"19"},{"size":2888,"mtime":1626110341927,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1098izp",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"38"},"D:\\react-cryptocurrency-app\\src\\index.js",[],["78","79"],"D:\\react-cryptocurrency-app\\src\\App.js",[],"D:\\react-cryptocurrency-app\\src\\API\\Api.js",[],"D:\\react-cryptocurrency-app\\src\\Containers\\Navbar.js",["80","81","82","83","84","85","86","87","88","89"],"import React,{useState} from 'react'\r\nimport Navbar from  'react-bootstrap/Navbar'\r\nimport {Button,Form,FormControl} from 'react-bootstrap'\r\nimport Autosuggest from '../Components/Autosuggest'\r\nimport '../CSS/Navbar.css'\r\n\r\n\r\nconst NavbarTitle = () => {\r\n    \r\n\r\n  \r\n  const [search,setSearch]=useState(\"\")\r\n    const handleInput=(e)=>{\r\n        setSearch(e.target.value)\r\n        console.log(e.target.value)\r\n      }\r\n    return (\r\n        <>\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" style={{justifyContent:\"space-between\"}}>\r\n            <Navbar.Brand href=\"#home\"> <img src=\"https://lh3.google.com/u/0/d/1i9DqfcP0c4TQMcrBeSy6J83nL5FiZDPe=w1904-h947-iv1\" style={{width:'100%',filter:'invert(1)'}}/></Navbar.Brand>\r\n            <Navbar aria-controls=\"basic-navbar-nav\" />\r\n           \r\n                <Form inline style={{position:'relative'}}>\r\n                <Autosuggest/>\r\n                <Button style={{    \"background\": \"#7666e4\",\r\n    \"color\": \"white\",\"border\":0}}>Search</Button>\r\n                </Form>\r\n            \r\n        </Navbar>\r\n\r\n\r\n\r\n\r\n        {/* <nav style={{background:'#2c1f95'}}>\r\n            <img src=\"https://lh3.google.com/u/0/d/1i9DqfcP0c4TQMcrBeSy6J83nL5FiZDPe=w1904-h947-iv1\" style={{maxWidth:\"10%\",width:'100%',filter:'invert(1)'}}/>\r\n            <form>\r\n            <input type=\"text\" placeholder=\"Search your cryptocurrency\" className=\"coin-input\" onChange={handleInput}/>\r\n          </form>\r\n\r\n        </nav> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NavbarTitle\r\n","D:\\react-cryptocurrency-app\\src\\Containers\\CoinsList.js",["90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105"],"import React,{useEffect,useState} from 'react'\r\nimport Table from 'react-bootstrap/Table';\r\nimport { Container,Button } from 'react-bootstrap';\r\nimport Coin from './Coin'\r\nimport '../CSS/Paginate.css' \r\nimport {connect} from 'react-redux'\r\nimport {getAllCoinList,getCoinChartData,getAllCoinDataForAutoSuggest} from '../Store/Actions/Actions'\r\nimport ReactPaginate from \"react-paginate\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Paginate from '../Components/Paginate'\r\nimport Autosuggest from '../Components/Autosuggest'\r\nimport { forEach } from 'lodash';\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\nimport bxSort from '@iconify/icons-bx/bx-sort';\r\nimport '../CSS/Homepage.css'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst CoinsList = (props) => {\r\n// URL:https://api.coingecko.com/api/v3/coins/markets?vs_currency=inr&order=market_cap_desc&per_page=100&page=1&sparkline=false\r\nconst {coinList,totalCount,loader}=props\r\n\r\nconst [offset,setOffset]=useState(0)\r\nconst [perPage,setPerPage]=useState(100)\r\nconst [currentPage,setCurrentPage]=useState(0)\r\nconst [pageCount,setPageCount]=useState(0)\r\nconst [tableData,setTableData]=useState([])\r\nconst [orgTableData,setOrgTableData]=useState([])\r\nconst [sortType,setSortType]=useState('asc')\r\nconst [count,setCount]=useState(0)\r\nconst changeOrder=()=>{\r\n  sortType==='asc'?setSortType('desc'):setSortType('asc')\r\n}\r\nconst sorted=tableData.sort((a,b)=>{\r\n  const isReversed=(sortType==='asc')?1:-1\r\n  return isReversed*a.name.localeCompare(b.name)\r\n})\r\nconst handlePageClick=(page)=>{\r\n  props.getList(page)\r\n  // alert(\"hello\")\r\n  setCount((prevState)=>prevState+1)\r\n  console.log(count\r\n    )\r\n}\r\n\r\nconst history = useHistory();\r\nconst handleClick=()=> {\r\n        // history.push(`/coins/${tableData.id}`);\r\n        \r\n      }\r\nconst getData=()=> {\r\n  var tdata = coinList;\r\n  var slice = tdata.slice(offset, offset + perPage)\r\n  setPageCount(Math.ceil(tdata.length / perPage))\r\n  setTableData(slice)\r\n  setOrgTableData(tdata)\r\n};\r\n\r\nconst getTableData=()=>{\r\nreturn sorted.map((coinid,index)=>{\r\n\r\nconst idkey=(count*100)-100+index+1\r\nfor(let i=0;i<sorted.length;i++) {\r\n \r\nreturn (<tr onClick={()=>{\r\n  history.push(`/coins/${coinid.id}`)\r\n}}><Coin \r\nkey={coinid.id} \r\nid={idkey}\r\nname={coinid.name} \r\nimage={coinid.image} \r\nsymbol={coinid.symbol.toUpperCase()} \r\nvolume={coinid.total_volume}\r\nprice={coinid.current_price.toLocaleString()}\r\npriceChange={coinid.price_change_percentage_24h}\r\nmarketcap={coinid.market_cap.toLocaleString()}\r\nrealId={coinid.id}\r\n// sparkline={coinid.market_cap_rank}\r\n/></tr>)\r\n}})};\r\n\r\nuseEffect(()=>{\r\n  handlePageClick(1)\r\n  // props.getAutoSuggestList()\r\n  },[])\r\n\r\nuseEffect(()=>{\r\n  if(coinList){\r\n    getData()\r\n  }\r\n},[coinList])\r\n// useEffect(()=>{\r\n//   console.log(props.coinListData)\r\n// },[props.coinListData])\r\n// useEffect(()=>{\r\n//   var table = document.getElementsByTagName('table')\r\n//   var rows = table.getElementByTagName('tr')\r\n// console.log(\"table rows are\",rows)\r\n// },[tableData])\r\n\r\n  \r\n    return (\r\n        <div className=\"coin-app\" style={{overflow:'auto'}}>\r\n            <div className=\"sortDiv\">\r\n                <span className=\"sortIcon\"><Icon icon={bxSort} style={{color: '#7666E4', fontSize: '19px'}} /></span>\r\n                <span className=\"sortText\">Sort In</span>\r\n\r\n                <select onChange={changeOrder} className=\"sortMenu\" >\r\n                  <option value=\"asc\" style={{padding:'5px 5px'}}>Ascending</option>\r\n                  <option value=\"desc\" style={{padding:'5px 5px'}}>Descending</option>\r\n                </select>\r\n          </div>\r\n         \r\n        <Container fluid style={{margin:'35px 0px'}}>\r\n        \r\n        \r\n{!loader ?\r\n        <Table striped bordered hover id=\"coinTable\" responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Coin</th>\r\n            <th>Symbol</th>\r\n            <th>Price</th>\r\n            <th>Volume</th>\r\n            <th>Market Cap</th>\r\n            <th>PriceChange</th>\r\n            {/* <th>Action</th> */}\r\n          </tr>\r\n        </thead>\r\n       <tbody>\r\n      \r\n        {getTableData()}\r\n       </tbody>\r\n            \r\n  \r\n  \r\n          </Table>:\r\n          <Loader type=\"Grid\" color=\"#7666e4\" height={80} width={80} style={{'justify-content':'center','display':'flex'}} />}\r\n          \r\n          <Paginate totalCount={totalCount} handlePageClick={(Data)=>handlePageClick(Data.selected+1)}/>\r\n        </Container>\r\n        \r\n      </div>\r\n    )\r\n}\r\nconst mapStateToProps=(state)=>{\r\n  // console.log(\"called from mapStatetoProps\",state.CoinListReducers)\r\n  return{\r\n    coinList: state.CoinListReducers ? state.CoinListReducers.orgcoinList :null,\r\n    totalCount: state.CoinListReducers ? state.CoinListReducers.count :null,\r\n    loader:state.CoinListReducers? state.CoinListReducers.loading:null,\r\n    coinListData:state.CoinListReducers?state.CoinListReducers.autoSuggestData:null\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\nreturn{\r\n  getList:(page)=>dispatch(getAllCoinList(page)),\r\n  getAutoSuggestList:()=>dispatch(getAllCoinDataForAutoSuggest())\r\n}\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CoinsList)\r\n","D:\\react-cryptocurrency-app\\src\\Containers\\Coin.js",["106","107"],"import React from 'react'\r\nimport '../CSS/Coin.css'\r\nimport {Button}  from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nconst Coin = ({id,name,image,symbol,price,volume,priceChange,marketcap,realId,sparkline}) => {\r\n    \r\n    return (\r\n<>\r\n\r\n        \r\n  \r\n      <td >{id}</td>\r\n\r\n      <td>\r\n          <span>\r\n            <img src={image} alt=\"\" style={{width:\"100%\",maxWidth:\"35px\"}}/>   \r\n                {name}\r\n            </span>\r\n        </td>\r\n        <td>\r\n            {symbol}\r\n        </td>\r\n      <td>{price}</td>\r\n      <td>{volume}</td>\r\n      <td>{priceChange}</td>\r\n      <td>{marketcap}</td>\r\n     \r\n      {/* <td>\r\n        <Link  style={{color:'white',    'background': '#7666e4',\r\n    'padding': '10px 20px',\r\n    'border-radius':' 5px'}}to={`/coins/${realId}`}>View</Link>\r\n        </td>  */}\r\n        </>)\r\n  \r\n\r\n        \r\n               \r\n    //                 <Card style={{ width: '250px',background:'#2e219514',padding:'20px 40px',boxShadow: '0 0 0 #cccccc, 0 0 0 #ffffff, 10px 10px 10px #cccccc , -10px -10px 10px #ffffff ',\r\n    // minWidth: '320px',\r\n    // minHeight: '493px',\r\n    // maxWidth: '320px',\r\n    // maxHeight: '520px',marginBottom:'50px'}}>\r\n    //                 <Card.Img variant=\"top\" src={image} alt=\"crypto-image\" style={{width:'100%'}} />\r\n    //                 <Card.Body>\r\n    //                     <Card.Title><h1>{name}<span className=\"name-span\">({symbol})</span></h1></Card.Title>\r\n    //                     <Card.Text>\r\n    //                     <p className=\"coin-price\">\r\n    //                         <span className=\"asdf\"><h1 className=\"name-span\">Current Price:</h1></span>\r\n    //                         Rs {price}</p>\r\n    //                <p className=\"coin-volume\">\r\n    //                    <span className=\"asdf\"><h1 className=\"name-span\">Total Volume:</h1></span>\r\n    //                    Rs {volume}</p>\r\n\r\n    //                {priceChange<0 ? (<p className=\"coin-percent red\">\r\n    //                    <span className=\"asdf\"><h1 className=\"name-span\">Price change:</h1></span>\r\n    //                    {priceChange.toFixed(2)}%</p>) : (<p className=\"coin-percent green\">\r\n    //                        <span className=\"asdf\"><h1 className=\"name-span\">Price change:</h1></span>\r\n    //                        {priceChange}%</p>)}\r\n\r\n    //                  <p className=\"market-cap\">\r\n    //                  <span className=\"asdf\"><h1 className=\"name-span\">Market Cap:</h1></span>\r\n    //                     Rs {marketcap.toLocaleString()}\r\n    //                </p>.\r\n    //                     </Card.Text>\r\n                        \r\n    //                 </Card.Body>\r\n    //                 </Card>\r\n               \r\n               \r\n            \r\n    \r\n    //     <div className=\"coin-container\">\r\n    //         <div className=\"coin-row\">\r\n    //             <Col xs lg=\"2\">\r\n    //             <div className=\"coin\">\r\n    //                 <img src={image} alt=\"crypto-image\"/>\r\n    //                 <h1>{name}<span className=\"name-span\">({symbol})</span></h1>\r\n    //                 {/* <p className=\"coin-symbol\">{symbol}</p> */}\r\n    //             </div>\r\n                \r\n    //             <div className=\"coin-data\">\r\n    //                 <p className=\"coin-price\">Rs {price}</p>\r\n    //                 <p className=\"coin-volume\">Rs {volume}</p>\r\n\r\n    //                 {priceChange<0 ? (<p className=\"coin-percent red\">{priceChange.toFixed(2)}%</p>) : (<p className=\"coin-percent green\">{priceChange}%</p>)}\r\n\r\n    //                 <p className=\"market-cap\">\r\n    //                     MKT CAP: Rs {marketcap.toLocaleString()}\r\n    //                 </p>\r\n    //             </div>\r\n\r\n    //         </div>\r\n            \r\n    //     </div>\r\n    // )\r\n}\r\n\r\nexport default Coin\r\n","D:\\react-cryptocurrency-app\\src\\Containers\\SingleCoin.js",["108","109","110","111","112","113","114","115","116","117","118","119","120","121","122"],"import React,{useEffect,useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport ReactHighcharts from 'react-highcharts/ReactHighstock.src'\r\nimport Loader from \"react-loader-spinner\";\r\nimport {Breadcrumb,Row,Col,Container,Card,Button,Badge,Table} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport  {getSingleCoinData,getCoinChartData} from '../Store/Actions/Actions'\r\nimport '../CSS/singlecoin.css'\r\nconst SingleCoin = (props) => {\r\n\r\nconst id=props.match.params.id\r\nconst options = {style: 'currency', currency: 'USD'};\r\nconst numberFormat = new Intl.NumberFormat('en-US', options);\r\nconst [percentageChange,setPercentageChange] =useState('')\r\n\r\n\r\n\r\nuseEffect(()=>{\r\n  props.getSingleCoinData(id) \r\n},[])\r\n// useEffect(()=>{\r\n//   configPrice.setSize(600, 300);\r\n// },[])\r\nuseEffect(()=>{\r\n  props.getCoinChartData(id,'usd','max')\r\n},[])\r\n\r\nconst initValues={\r\n  coinName:props.singlecoinData ? props.singlecoinData.name: \"hello\" \r\n}\r\nconst [values,setValues]=useState(initValues)\r\nconst {coinName}=values\r\nuseEffect(()=>{\r\n  console.log(values)\r\n},[id])\r\nconst configPrice = props.ChartDataPrice ? {    \r\n  yAxis: [{\r\n    offset: 20,\r\n    labels: {\r\n      formatter: function () {\r\n        return numberFormat.format(this.value) \r\n      },\r\n      x: -15,\r\n      style: {\r\n        \"color\": \"#000\", \"position\": \"absolute\"\r\n      },\r\n      align: 'left'\r\n    },\r\n  },\r\n  ],\r\n  \r\n  tooltip: {\r\n    shared: true,\r\n    formatter: function () {\r\n      return numberFormat.format(this.y, 0) +  '</b><br/>' + moment(this.x).format('MMMM Do YYYY, h:mm')\r\n    }\r\n  },\r\n  plotOptions: {\r\n    series: {\r\n      showInNavigator: true,\r\n      gapSize: 6,\r\n    }\r\n  },\r\n  rangeSelector: {\r\n    selected: 1\r\n  },\r\n  chart: {\r\n    height: 600,\r\n    \r\n  },\r\n  credits: {\r\n    enabled: false\r\n  },\r\n  legend: {\r\n    enabled: true\r\n  },\r\n  xAxis: {\r\n    type: 'date',\r\n  },\r\n  rangeSelector: {\r\n    buttons: [{\r\n      type: 'day',\r\n      count: 1,\r\n      text: '1d',\r\n    }, {\r\n      type: 'day',\r\n      count: 7,\r\n      text: '7d'\r\n    }, {\r\n      type: 'month',\r\n      count: 1,\r\n      text: '1m'\r\n    }, {\r\n      type: 'month',\r\n      count: 3,\r\n      text: '3m'\r\n    },\r\n      {\r\n      type: 'all',\r\n      text: 'All'\r\n    }],\r\n    selected: 4\r\n  },\r\n  series: [{\r\n    name: 'Price',\r\n    type: 'spline',\r\n\r\n    data: props.ChartDataPrice.prices,\r\n    tooltip: {\r\n      valueDecimals: 2\r\n    },\r\n  }\r\n  ],\r\n  responsive: {\r\n    rules: [{\r\n        condition: {\r\n         \r\n            maxWidth: 550\r\n        },\r\n        chartOptions: {\r\n            chart: {\r\n                height: 600,\r\n               \r\n            },\r\n            subtitle: {\r\n                text: null\r\n            },\r\n            navigator: {\r\n                enabled: false\r\n            }\r\n        }\r\n    }]\r\n}\r\n}:\"loading...\"\r\n\r\n \r\n  const style=props.singlecoinData && props.singlecoinData.market_data.price_change_percentage_24h<0?'red':'green'\r\n  const style2=props.singlecoinData && props.singlecoinData.market_data.ath_change_percentage.usd<0?'red':'green'\r\n  const style3=props.singlecoinData && props.singlecoinData.market_data.atl_change_percentage.usd<0?'red':'green'\r\n  \r\n    return (\r\n      <div>\r\n        {/* bread crumbds started */}\r\n        <Breadcrumb>\r\n        <Breadcrumb.Item ><Link to=\"/\">Home</Link></Breadcrumb.Item>\r\n        <Breadcrumb.Item >\r\n            {id}\r\n        </Breadcrumb.Item>       \r\n      </Breadcrumb>\r\n      {/* breadcrumb ended */}\r\n  \r\n\r\n      {!props.loader && props.singlecoinData && props.ChartDataPrice?\r\n      <Container >\r\n      <h1 style={{textAlign:'center',textTransform:'uppercase'}}>{id} stock price</h1>\r\n      <Row className=\"justify-content-center\">   \r\n      <Col  style={{ width: '20rem' }}  className=\"dataCards\">\r\n        <Card style={{ width: '20rem' }}>\r\n          <Card.Body >\r\n            <Row style={{alignItems:'center'}}>\r\n              <Card.Title style={{padding:'0px 10px'}}><img src={props.singlecoinData.image.thumb}/></Card.Title>\r\n              <Card.Title>{props.singlecoinData.name}({props.singlecoinData.symbol})</Card.Title>  \r\n            </Row>\r\n            <Card.Title>${props.singlecoinData.market_data.current_price.usd}<span style={{color:style,'padding':'0px 15px '}}>{props.singlecoinData.market_data.price_change_percentage_24h}%</span></Card.Title>\r\n            <Card.Text>\r\n              <Row>\r\n                <p style={{padding:'0px 10px'}}>Homepage</p>\r\n                <div style={{display:'flex',}}>\r\n                  {props.singlecoinData.links.homepage.map((item)=>{             \r\n                    const val=item!='' && item.split('/')[2].split('.')\r\n                    \r\n                    return(\r\n                      item!=''&& <p><Badge style={{padding:'5px 10px',margin:'0px 5px'}} variant=\"secondary\" ><a style={{color:'white'}} href={item}>{val.length=='2'?val[0]:val[1]}</a></Badge></p>\r\n                    )\r\n                  })}\r\n                  </div>\r\n              </Row>\r\n              <Row>\r\n                <p style={{padding:'0px 10px'}}>Websites</p>\r\n                {props.singlecoinData.links.blockchain_site.map((item)=>{  \r\n                  const val=item!='' && item.split('/')[2].split('.')[0]     \r\n                  return(\r\n                    item!=''&& <p><Badge style={{padding:'5px 10px',margin:'0px 5px'}} variant=\"secondary\" ><a style={{color:'white'}} href={item}>{val}</a></Badge></p>\r\n                  )\r\n                })}  \r\n              </Row>\r\n              <Row>\r\n                <p>Community</p>\r\n                <p><Badge style={{padding:'5px 10px',margin:'0px 5px'}} variant=\"secondary\" ><a style={{color:'white'}} href={`https://twitter.com/${props.singlecoinData.links.twitter_screen_name}`}>Twitter</a></Badge></p>\r\n\r\n                <p><Badge style={{padding:'5px 10px',margin:'0px 5px'}} variant=\"secondary\" ><a style={{color:'white'}} href={props.singlecoinData.links.subreddit_url}>Reddit</a></Badge></p>\r\n\r\n                <p><Badge style={{padding:'5px 10px',margin:'0px 5px'}} variant=\"secondary\" ><a style={{color:'white'}} href={`https://www.facebook.com/${props.singlecoinData.links.facebook_username}/`}>Facebook</a></Badge></p>\r\n\r\n                <p><Badge style={{padding:'5px 10px',margin:'0px 5px'}} variant=\"secondary\" ><a style={{color:'white'}} href={props.singlecoinData.links.official_forum_url[0]}>bitcointalk.org</a></Badge></p>\r\n\r\n              </Row>\r\n              <Row>\r\n                <p>Github</p>\r\n                <p><Badge style={{padding:'5px 10px',margin:'0px 5px'}} variant=\"secondary\" ><a style={{color:'white'}} href={props.singlecoinData.links.repos_url.github[0]}>Github</a></Badge></p>\r\n              </Row>\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        <Card style={{ width: '20rem',marginTop:'0.5rem' }} className=\"marketDataCard\">\r\n              <Card.Body>\r\n                <Card.Title style={{textTransform:'capitalize'}}> {id} Market Stats</Card.Title>\r\n                <Card.Text id=\"market_data\">\r\n                  <p>Market Cap<span>{props.singlecoinData.market_data.market_cap.usd}</span></p> \t\r\n                  <p>Trading Volume<span>{props.singlecoinData.market_data.total_volume.usd.toLocaleString()}</span></p>\r\n                  <p>Volume / Market Cap<span>{\r\n                    (Number(props.singlecoinData.market_data.total_volume.usd)/\r\n                    Number(props.singlecoinData.market_data.market_cap.usd)).toFixed(3)\r\n                  }</span></p>\r\n                  <p>24h Low / 24h High<span>{props.singlecoinData.market_data.low_24h.usd}/{props.singlecoinData.market_data.high_24h.usd}</span></p>\r\n                  <p>Market Cap Rank<span>{props.singlecoinData.market_cap_rank}</span></p>\r\n                  <p>All-Time High\t<span><span>{props.singlecoinData.market_data.ath.usd}</span><span style={{color:style2}}>{props.singlecoinData.market_data.ath_change_percentage.usd}</span></span></p>\r\n                  <p>All-Time Low<span><span>{props.singlecoinData.market_data.atl.usd}</span><span style={{color:style3}}>\r\n                  {props.singlecoinData.market_data.atl_change_percentage.usd}</span></span></p>\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n        </Col>\r\n        {/* Stock price chart started */}\r\n        <Col>\r\n          <ReactHighcharts config = {configPrice}/>\r\n          <Table bordered responsive>\r\n           <thead>\r\n             <tr>\r\n             \r\n             <th>24h</th>\r\n             <th>7d</th>\r\n             <th>14d</th>\r\n             <th>30d</th>\r\n             <th>1y</th>\r\n             </tr>\r\n           </thead>\r\n           <tbody>\r\n             <tr>\r\n                 <td>{props.singlecoinData.market_data.price_change_percentage_24h}</td>\r\n                 <td>{props.singlecoinData.market_data.price_change_percentage_7d}</td>\r\n                 <td>{props.singlecoinData.market_data.price_change_percentage_14d}</td>\r\n                 <td>{props.singlecoinData.market_data.price_change_percentage_30d}</td>\r\n                 <td>{props.singlecoinData.market_data.price_change_percentage_1y}</td>\r\n             </tr>\r\n           </tbody>\r\n         </Table>\r\n        </Col>\r\n        {/* Stock price chart ends */}\r\n        \r\n\r\n        {/* price change info strats */}\r\n        \r\n         \r\n        </Row>\r\n\r\n        <Col>\r\n<Row>\r\n        {/* basic info card starts */}\r\n      \r\n        {/* basic info card ends */}\r\n\r\n        {/* market stats info strtas */}\r\n        <Col  >\r\n            \r\n        </Col>\r\n\r\n        {/* markets stats info ends */}\r\n        </Row>\r\n        <Row>\r\n        \r\n        </Row>\r\n        </Col> \r\n       {/* price change info ends */}\r\n      </Container>\r\n        :\r\n        <Loader type=\"Grid\" color=\"#7666e4\" height={80} width={80} style={{'justify-content':'center','display':'flex'}} />\r\n      }\r\n      </div>\r\n    )\r\n}\r\nconst mapStateToProps=(state)=>{\r\n  return{\r\n    singlecoinData: state.CoinListReducers ? state.CoinListReducers.singlecoinData.data :null,\r\n    ChartDataPrice: state.CoinListReducers ? state.CoinListReducers.chartData.data :null,\r\n    loader:state.CoinListReducers? state.CoinListReducers.loading:null\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n  return{\r\n    getSingleCoinData:(id)=>dispatch(getSingleCoinData(id)),\r\n    getCoinChartData:(id,cur,time)=>dispatch(getCoinChartData(id,cur,time))\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SingleCoin)\r\n","D:\\react-cryptocurrency-app\\src\\Store\\store.js",[],"D:\\react-cryptocurrency-app\\src\\Store\\Reducers\\RootReducer.js",[],"D:\\react-cryptocurrency-app\\src\\Store\\Reducers\\index.js",[],"D:\\react-cryptocurrency-app\\src\\Store\\Actions\\ActionType.js",[],"D:\\react-cryptocurrency-app\\src\\Store\\Sagas\\index.js",[],"D:\\react-cryptocurrency-app\\src\\Store\\Sagas\\coinlist-saga.js",[],"D:\\react-cryptocurrency-app\\src\\API\\Services.js",["123"],"import API from './Api'\r\n// https://api.coingecko.com/api/v3/coins/markets?vs_currency=inr&order=market_cap_desc&per_page=100&page=1&sparkline=false\r\n\r\nexport const getAllCoinList=async(page)=>{\r\n    try{\r\n        const perpage=100\r\n        const offset=(page*perpage)-perpage\r\n        const list = await API.get(`markets?vs_currency=inr&per_page=${perpage}&page=`+page+'&sparkline=true')\r\n        // console.log(list.data)\r\n        return list.data\r\n       \r\n    }\r\n    catch(e){\r\n        console.error(e)\r\n    }\r\n}\r\n\r\nexport const getChartData=async(id,cur,time)=>{\r\n    try{\r\n        const data=await API.get(`/${id}/market_chart?vs_currency=${cur}&days=${time}`)\r\n        console.log(data.data)\r\n        return data\r\n    }\r\n    catch(e){\r\n        console.error(e)\r\n    }\r\n}\r\n\r\nexport const getSingleCoinData=async(id)=>{\r\n    try{\r\n        const data= await API.get(`/${id}`)\r\n        // console.log(data)\r\n        return data\r\n    }\r\n    catch(e){\r\n        console.error(e)\r\n    }\r\n}\r\n\r\nexport const getListAll=async()=>{\r\n    try{\r\n        const list=await API.get('/list')\r\n        return list\r\n    }\r\n    catch(e){\r\n        console.error(e)\r\n    }\r\n}","D:\\react-cryptocurrency-app\\src\\Store\\Actions\\Actions.js",[],"D:\\react-cryptocurrency-app\\src\\Components\\Paginate.js",["124"],"import React from 'react'\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nconst Paginate = (props) => {\r\n    \r\n    return (\r\n        <ReactPaginate\r\n                previousLabel={\"prev\"}\r\n                nextLabel={\"next\"}\r\n                breakLabel={\"...\"}\r\n                breakClassName={\"break-me\"}\r\n                pageCount={props.totalCount/20}\r\n                pageRangeDisplayed={2}\r\n                marginPagesDisplayed={1}\r\n                containerClassName={\"pagination\"}\r\n                onPageChange={props.handlePageClick}\r\n                containerClassName={\"pagination\"}\r\n                subContainerClassName={\"pages pagination\"}\r\n                activeClassName={\"active\"}\r\n                />\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","D:\\react-cryptocurrency-app\\src\\Components\\Autosuggest.js",["125","126","127","128","129","130","131","132"],"import axios from 'axios'\r\nimport React,{useState,useEffect} from 'react'\r\nimport {Form} from 'react-bootstrap'\r\nimport {connect} from 'react-redux'\r\nimport {getAllCoinDataForAutoSuggest} from '../Store/Actions/Actions'\r\nimport { Link } from 'react-router-dom'\r\nimport { Icon} from '@iconify/react';\r\nimport searchAlt from '@iconify/icons-el/search-alt';\r\nimport {ListGroup} from 'react-bootstrap'\r\nimport API from '../API/Api'\r\nimport { set } from 'lodash'\r\nimport SimpleBar from 'simplebar-react';\r\nimport 'simplebar/dist/simplebar.min.css';\r\n\r\nimport Scrollbar from \"react-scrollbars-custom\";\r\n\r\nconst Autosuggest = (props) => {\r\n\r\n  const [value,setValue]=useState('')\r\n  const [coins,setCoins]=useState([])\r\n  const [matchCoins,setMatchCoins]=useState([])\r\n  \r\n\r\n  useEffect(()=>{\r\n    props.getAutoSuggestList()\r\n  },[])\r\n  useEffect(()=>{\r\n    const data = props.coinListData.map((item)=>item.id.replace(/\\s+/g, '-').replace(/\\./g,'-').trim())\r\n    // data = data \r\n    setCoins(data)\r\n    console.log(\"data\",coins)\r\n  },[props.coinListData])\r\n\r\n  const onTextChanged=(e)=>{\r\n    const value=e.target.value\r\n    let suggestion=[]\r\n    if(value.length>0){\r\n      console.log(\"inside value lenght\")\r\n      const regex= new RegExp(`^${value}`,'i')\r\n      console.log(\"regex is\",regex)\r\n      suggestion=coins.sort().filter(v=>regex.test(v))\r\n      console.log(\"suugestion are\",suggestion )\r\n    }\r\n    setValue(value)\r\n    setMatchCoins(suggestion)\r\n  }\r\n\r\n  useEffect(()=>{\r\n    console.log(\"outside\",matchCoins)\r\n    if(matchCoins.length>0){\r\n      console.log(\"indide\",matchCoins)\r\n    }\r\n  },[matchCoins])\r\n  const suggestionSelectedValue=(value)=>{\r\n      setValue(value)\r\n      setMatchCoins([])\r\n  }\r\n\r\n  \r\n  \r\n  \r\n  const renderSuggestions=()=>{\r\n    if(matchCoins.length<0){\r\n      return <h1>No record found</h1>\r\n    }\r\n    else{\r\n      return <ul  className=\"ListCoins\">\r\n        {\r\n          matchCoins.map((item)=>{\r\n          return  <ListGroup>\r\n                    <ListGroup.Item action onClick={()=>suggestionSelectedValue(item)}>\r\n                        <Link to={`/coins/${item.toString().toLowerCase()}`}>{item}</Link>\r\n                    </ListGroup.Item>\r\n                  </ListGroup>\r\n            })\r\n        }\r\n      </ul>\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <div  id=\"searchBar\">\r\n      <input value={value} type=\"text\" placeholder=\"Search Your Coin\" onChange={onTextChanged} className=\"searchCoinInput\"/>\r\n      {value.length>0 && \r\n        \r\n          \r\n          renderSuggestions()\r\n        \r\n      }\r\n        <span id=\"searchIcon\">\r\n          <Icon icon={searchAlt} style={{color: '#7666E4',fontSize: '30px'}} hFlip={true} />\r\n        </span>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps=(state)=>{\r\n  console.log(\"called from mapStatetoProps\",state.CoinListReducers)\r\n  return{\r\n    coinListData:state.CoinListReducers?state.CoinListReducers.autoSuggestData:null\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\nreturn{\r\n  getAutoSuggestList:()=>dispatch(getAllCoinDataForAutoSuggest())\r\n}\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Autosuggest)\r\n",{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":3,"column":9,"nodeType":"139","messageId":"140","endLine":3,"endColumn":15},{"ruleId":"137","severity":1,"message":"141","line":3,"column":16,"nodeType":"139","messageId":"140","endLine":3,"endColumn":20},{"ruleId":"137","severity":1,"message":"142","line":3,"column":21,"nodeType":"139","messageId":"140","endLine":3,"endColumn":32},{"ruleId":"137","severity":1,"message":"143","line":5,"column":16,"nodeType":"139","messageId":"140","endLine":5,"endColumn":26},{"ruleId":"137","severity":1,"message":"144","line":16,"column":10,"nodeType":"139","messageId":"140","endLine":16,"endColumn":16},{"ruleId":"137","severity":1,"message":"145","line":16,"column":17,"nodeType":"139","messageId":"140","endLine":16,"endColumn":26},{"ruleId":"146","severity":1,"message":"147","line":42,"column":15,"nodeType":"148","endLine":42,"endColumn":75},{"ruleId":"149","severity":1,"message":"150","line":49,"column":43,"nodeType":"151","messageId":"152","endLine":49,"endColumn":45},{"ruleId":"149","severity":1,"message":"150","line":50,"column":43,"nodeType":"151","messageId":"152","endLine":50,"endColumn":45},{"ruleId":"149","severity":1,"message":"150","line":52,"column":27,"nodeType":"151","messageId":"152","endLine":52,"endColumn":29},{"ruleId":"137","severity":1,"message":"138","line":3,"column":20,"nodeType":"139","messageId":"140","endLine":3,"endColumn":26},{"ruleId":"137","severity":1,"message":"153","line":7,"column":24,"nodeType":"139","messageId":"140","endLine":7,"endColumn":40},{"ruleId":"137","severity":1,"message":"154","line":8,"column":8,"nodeType":"139","messageId":"140","endLine":8,"endColumn":21},{"ruleId":"137","severity":1,"message":"155","line":11,"column":8,"nodeType":"139","messageId":"140","endLine":11,"endColumn":19},{"ruleId":"137","severity":1,"message":"156","line":12,"column":10,"nodeType":"139","messageId":"140","endLine":12,"endColumn":17},{"ruleId":"137","severity":1,"message":"143","line":13,"column":16,"nodeType":"139","messageId":"140","endLine":13,"endColumn":26},{"ruleId":"137","severity":1,"message":"157","line":22,"column":15,"nodeType":"139","messageId":"140","endLine":22,"endColumn":24},{"ruleId":"137","severity":1,"message":"158","line":23,"column":16,"nodeType":"139","messageId":"140","endLine":23,"endColumn":26},{"ruleId":"137","severity":1,"message":"159","line":24,"column":8,"nodeType":"139","messageId":"140","endLine":24,"endColumn":19},{"ruleId":"137","severity":1,"message":"160","line":24,"column":20,"nodeType":"139","messageId":"140","endLine":24,"endColumn":34},{"ruleId":"137","severity":1,"message":"161","line":25,"column":8,"nodeType":"139","messageId":"140","endLine":25,"endColumn":17},{"ruleId":"137","severity":1,"message":"162","line":27,"column":8,"nodeType":"139","messageId":"140","endLine":27,"endColumn":20},{"ruleId":"137","severity":1,"message":"163","line":46,"column":7,"nodeType":"139","messageId":"140","endLine":46,"endColumn":18},{"ruleId":"164","severity":1,"message":"165","line":59,"column":33,"nodeType":"166","messageId":"167","endLine":59,"endColumn":35},{"ruleId":"168","severity":1,"message":"169","line":84,"column":5,"nodeType":"170","endLine":84,"endColumn":7,"suggestions":"171"},{"ruleId":"168","severity":1,"message":"172","line":90,"column":3,"nodeType":"170","endLine":90,"endColumn":13,"suggestions":"173"},{"ruleId":"137","severity":1,"message":"138","line":3,"column":9,"nodeType":"139","messageId":"140","endLine":3,"endColumn":15},{"ruleId":"137","severity":1,"message":"174","line":4,"column":10,"nodeType":"139","messageId":"140","endLine":4,"endColumn":14},{"ruleId":"137","severity":1,"message":"138","line":5,"column":43,"nodeType":"139","messageId":"140","endLine":5,"endColumn":49},{"ruleId":"137","severity":1,"message":"175","line":15,"column":8,"nodeType":"139","messageId":"140","endLine":15,"endColumn":24},{"ruleId":"137","severity":1,"message":"176","line":15,"column":25,"nodeType":"139","messageId":"140","endLine":15,"endColumn":44},{"ruleId":"168","severity":1,"message":"177","line":21,"column":3,"nodeType":"170","endLine":21,"endColumn":5,"suggestions":"178"},{"ruleId":"168","severity":1,"message":"177","line":27,"column":3,"nodeType":"170","endLine":27,"endColumn":5,"suggestions":"179"},{"ruleId":"137","severity":1,"message":"180","line":32,"column":15,"nodeType":"139","messageId":"140","endLine":32,"endColumn":24},{"ruleId":"137","severity":1,"message":"181","line":33,"column":8,"nodeType":"139","messageId":"140","endLine":33,"endColumn":16},{"ruleId":"168","severity":1,"message":"182","line":36,"column":3,"nodeType":"170","endLine":36,"endColumn":7,"suggestions":"183"},{"ruleId":"184","severity":1,"message":"185","line":81,"column":3,"nodeType":"186","messageId":"152","endLine":81,"endColumn":16},{"ruleId":"146","severity":1,"message":"147","line":162,"column":56,"nodeType":"148","endLine":162,"endColumn":101},{"ruleId":"149","severity":1,"message":"187","line":171,"column":35,"nodeType":"151","messageId":"152","endLine":171,"endColumn":37},{"ruleId":"149","severity":1,"message":"187","line":174,"column":27,"nodeType":"151","messageId":"152","endLine":174,"endColumn":29},{"ruleId":"149","severity":1,"message":"150","line":174,"column":161,"nodeType":"151","messageId":"152","endLine":174,"endColumn":163},{"ruleId":"149","severity":1,"message":"187","line":182,"column":33,"nodeType":"151","messageId":"152","endLine":182,"endColumn":35},{"ruleId":"149","severity":1,"message":"187","line":184,"column":25,"nodeType":"151","messageId":"152","endLine":184,"endColumn":27},{"ruleId":"137","severity":1,"message":"188","line":7,"column":15,"nodeType":"139","messageId":"140","endLine":7,"endColumn":21},{"ruleId":"189","severity":1,"message":"190","line":17,"column":17,"nodeType":"191","endLine":17,"endColumn":50},{"ruleId":"137","severity":1,"message":"192","line":1,"column":8,"nodeType":"139","messageId":"140","endLine":1,"endColumn":13},{"ruleId":"137","severity":1,"message":"141","line":3,"column":9,"nodeType":"139","messageId":"140","endLine":3,"endColumn":13},{"ruleId":"137","severity":1,"message":"193","line":10,"column":8,"nodeType":"139","messageId":"140","endLine":10,"endColumn":11},{"ruleId":"137","severity":1,"message":"194","line":11,"column":10,"nodeType":"139","messageId":"140","endLine":11,"endColumn":13},{"ruleId":"137","severity":1,"message":"195","line":12,"column":8,"nodeType":"139","messageId":"140","endLine":12,"endColumn":17},{"ruleId":"137","severity":1,"message":"196","line":15,"column":8,"nodeType":"139","messageId":"140","endLine":15,"endColumn":17},{"ruleId":"168","severity":1,"message":"197","line":26,"column":5,"nodeType":"170","endLine":26,"endColumn":7,"suggestions":"198"},{"ruleId":"168","severity":1,"message":"199","line":32,"column":5,"nodeType":"170","endLine":32,"endColumn":25,"suggestions":"200"},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'FormControl' is defined but never used.","'InlineIcon' is defined but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'getCoinChartData' is defined but never used.","'ReactPaginate' is defined but never used.","'Autosuggest' is defined but never used.","'forEach' is defined but never used.","'setOffset' is assigned a value but never used.","'setPerPage' is assigned a value but never used.","'currentPage' is assigned a value but never used.","'setCurrentPage' is assigned a value but never used.","'pageCount' is assigned a value but never used.","'orgTableData' is assigned a value but never used.","'handleClick' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handlePageClick'. Either include it or remove the dependency array.","ArrayExpression",["203"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["204"],"'Link' is defined but never used.","'percentageChange' is assigned a value but never used.","'setPercentageChange' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["205"],["206"],"'setValues' is assigned a value but never used.","'coinName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array.",["207"],"no-dupe-keys","Duplicate key 'rangeSelector'.","ObjectExpression","Expected '!==' and instead saw '!='.","'offset' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'axios' is defined but never used.","'API' is defined but never used.","'set' is defined but never used.","'SimpleBar' is defined but never used.","'Scrollbar' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["208"],"React Hook useEffect has a missing dependency: 'coins'. Either include it or remove the dependency array.",["209"],"no-global-assign","no-unsafe-negation",{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"214","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},"Update the dependencies array to be: [handlePageClick]",{"range":"223","text":"224"},"Update the dependencies array to be: [coinList, getData]",{"range":"225","text":"226"},"Update the dependencies array to be: [id, props]",{"range":"227","text":"228"},{"range":"229","text":"228"},"Update the dependencies array to be: [id, values]",{"range":"230","text":"231"},"Update the dependencies array to be: [props]",{"range":"232","text":"233"},"Update the dependencies array to be: [coins, props.coinListData]",{"range":"234","text":"235"},[2669,2671],"[handlePageClick]",[2732,2742],"[coinList, getData]",[765,767],"[id, props]",[898,900],[1113,1117],"[id, values]",[823,825],"[props]",[1028,1048],"[coins, props.coinListData]"]