[{"D:\\react-cryptocurrency-app\\src\\index.js":"1","D:\\react-cryptocurrency-app\\src\\App.js":"2","D:\\react-cryptocurrency-app\\src\\API\\Api.js":"3","D:\\react-cryptocurrency-app\\src\\API\\Services.js":"4","D:\\react-cryptocurrency-app\\src\\Components\\Autosuggest.js":"5","D:\\react-cryptocurrency-app\\src\\Components\\Paginate.js":"6","D:\\react-cryptocurrency-app\\src\\Containers\\Navbar.js":"7","D:\\react-cryptocurrency-app\\src\\Containers\\CoinsList.js":"8","D:\\react-cryptocurrency-app\\src\\Containers\\SingleCoin.js":"9","D:\\react-cryptocurrency-app\\src\\Components\\Theme-context.js":"10","D:\\react-cryptocurrency-app\\src\\Store\\Actions\\ActionType.js":"11","D:\\react-cryptocurrency-app\\src\\Containers\\Coin.js":"12","D:\\react-cryptocurrency-app\\src\\Containers\\Footer.js":"13","D:\\react-cryptocurrency-app\\src\\Store\\Sagas\\index.js":"14","D:\\react-cryptocurrency-app\\src\\Store\\Reducers\\RootReducer.js":"15","D:\\react-cryptocurrency-app\\src\\Store\\Actions\\Actions.js":"16","D:\\react-cryptocurrency-app\\src\\Store\\Sagas\\coinlist-saga.js":"17","D:\\react-cryptocurrency-app\\src\\Store\\Reducers\\index.js":"18","D:\\react-cryptocurrency-app\\src\\Store\\store.js":"19"},{"size":521,"mtime":1627279813010,"results":"20","hashOfConfig":"21"},{"size":1555,"mtime":1627279812362,"results":"22","hashOfConfig":"21"},{"size":246,"mtime":1627279812338,"results":"23","hashOfConfig":"21"},{"size":1158,"mtime":1627279812346,"results":"24","hashOfConfig":"21"},{"size":5695,"mtime":1627279812514,"results":"25","hashOfConfig":"21"},{"size":754,"mtime":1627279812522,"results":"26","hashOfConfig":"21"},{"size":3144,"mtime":1627279812706,"results":"27","hashOfConfig":"21"},{"size":6166,"mtime":1627279812698,"results":"28","hashOfConfig":"21"},{"size":12149,"mtime":1627279812706,"results":"29","hashOfConfig":"21"},{"size":493,"mtime":1627279812546,"results":"30","hashOfConfig":"21"},{"size":592,"mtime":1627279812746,"results":"31","hashOfConfig":"21"},{"size":804,"mtime":1627279812602,"results":"32","hashOfConfig":"21"},{"size":622,"mtime":1627279812698,"results":"33","hashOfConfig":"21"},{"size":239,"mtime":1627279812962,"results":"34","hashOfConfig":"21"},{"size":191,"mtime":1627279812786,"results":"35","hashOfConfig":"21"},{"size":1223,"mtime":1627279812786,"results":"36","hashOfConfig":"21"},{"size":1528,"mtime":1627279812906,"results":"37","hashOfConfig":"21"},{"size":2208,"mtime":1627279812826,"results":"38","hashOfConfig":"21"},{"size":500,"mtime":1627279812970,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1098izp",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"D:\\react-cryptocurrency-app\\src\\index.js",[],["87","88"],"D:\\react-cryptocurrency-app\\src\\App.js",[],"D:\\react-cryptocurrency-app\\src\\API\\Api.js",[],"D:\\react-cryptocurrency-app\\src\\API\\Services.js",["89"],"import API from './Api'\r\n// https://api.coingecko.com/api/v3/coins/markets?vs_currency=inr&order=market_cap_desc&per_page=100&page=1&sparkline=false\r\n\r\nexport const getAllCoinList=async(page)=>{\r\n    try{\r\n        const perpage=100\r\n        const offset=(page*perpage)-perpage\r\n        const list = await API.get(`markets?vs_currency=inr&per_page=${perpage}&page=`+page+'&sparkline=true')\r\n        // console.log(list.data)\r\n        return list.data\r\n       \r\n    }\r\n    catch(e){\r\n        console.error(e)\r\n    }\r\n}\r\n\r\nexport const getChartData=async(id,cur,time)=>{\r\n    try{\r\n        const data=await API.get(`/${id}/market_chart?vs_currency=${cur}&days=${time}`)\r\n        console.log(data.data)\r\n        return data\r\n    }\r\n    catch(e){\r\n        console.error(e)\r\n    }\r\n}\r\n\r\nexport const getSingleCoinData=async(id)=>{\r\n    try{\r\n        const data= await API.get(`/${id}`)\r\n        // console.log(data)\r\n        return data\r\n    }\r\n    catch(e){\r\n        console.error(e)\r\n    }\r\n}\r\n\r\nexport const getListAll=async()=>{\r\n    try{\r\n        const list=await API.get('/list')\r\n        return list\r\n    }\r\n    catch(e){\r\n        console.error(e)\r\n    }\r\n}","D:\\react-cryptocurrency-app\\src\\Components\\Autosuggest.js",["90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108"],"import axios from 'axios'\r\nimport React,{useState,useEffect,useRef} from 'react'\r\nimport {Form,Row} from 'react-bootstrap'\r\nimport {connect} from 'react-redux'\r\nimport {getAllCoinDataForAutoSuggest} from '../Store/Actions/Actions'\r\nimport { Link } from 'react-router-dom'\r\nimport { Icon} from '@iconify/react';\r\nimport searchAlt from '@iconify/icons-el/search-alt';\r\nimport {ListGroup} from 'react-bootstrap'\r\nimport API from '../API/Api'\r\nimport { set } from 'lodash'\r\nimport SimpleBar from 'simplebar-react';\r\nimport 'simplebar/dist/simplebar.min.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Scrollbar from \"react-scrollbars-custom\";\r\nfunction useOutsideAlerter(ref) {\r\n  useEffect(() => {\r\n      /**\r\n       * Alert if clicked on outside of element\r\n       */\r\n      function handleClickOutside(event) {\r\n        const rows = document.getElementById('ListCoins')\r\n        if(rows!=null && rows != undefined)\r\n        { \r\n          rows.style.display=\"block\"\r\n          \r\n          // alert(\"hello tehre\")\r\n        }\r\n          if (ref.current && !ref.current.contains(event.target)) {\r\n              // alert(\"You clicked outside of me!\");\r\n              const rows = document.getElementById('ListCoins')\r\n              rows.style.display=\"none\"\r\n              // console.log(\"rows are\" ,rows)\r\n              rows!=null || rows != undefined && console.log(rows.style.display)\r\n          }\r\n      }\r\n\r\n      // Bind the event listener\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      return () => {\r\n          // Unbind the event listener on clean up\r\n          document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      };\r\n  }, [ref]);\r\n}\r\n\r\nconst Autosuggest = (props) => {\r\n  const history = useHistory();\r\n  const [value,setValue]=useState('')\r\n  const [coins,setCoins]=useState([])\r\n  const [matchCoins,setMatchCoins]=useState([])\r\n  const node = useRef(null);\r\n  const elem= useRef()\r\n  useOutsideAlerter(node);\r\n\r\n  useEffect(() => {\r\n    /**\r\n     * Alert if clicked on outside of element\r\n     */\r\n    function handleClickOutside(event) {\r\n      const rows = document.getElementById('ListCoins')\r\n      if(rows!=null && rows != undefined)\r\n      { \r\n        rows.style.display=\"block\"\r\n       \r\n        \r\n        // alert(\"hello tehre\")\r\n      }\r\n        if (node.current && !node.current.contains(event.target)) {\r\n            // alert(\"You clicked outside of me!\");\r\n            const rows = document.getElementById('ListCoins')\r\n            rows.style.display=\"none\"\r\n             setValue('')\r\n            // console.log(\"rows are\" ,rows)\r\n            rows!=null || rows != undefined && console.log(rows.style.display)\r\n        }\r\n    }\r\n\r\n    // Bind the event listener\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n        // Unbind the event listener on clean up\r\n        document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n}, [node]);\r\n  \r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    props.getAutoSuggestList()\r\n  },[])\r\n  useEffect(()=>{\r\n    const data = props.coinListData.map((item)=>item.id.replace(/\\s+/g, '-').replace(/\\./g,'-').trim())\r\n    // data = data \r\n    setCoins(data)\r\n    console.log(\"data\",coins)\r\n  },[props.coinListData])\r\n\r\n  const onTextChanged=(e)=>{\r\n    const value=e.target.value\r\n    let suggestion=[]\r\n    if(value.length>0){\r\n      const regex= new RegExp(`^${value}`,'i') \r\n      suggestion=coins.sort().filter(v=>regex.test(v))\r\n    }\r\n    setValue(value)\r\n    setMatchCoins(suggestion)\r\n  }\r\n\r\n  useEffect(()=>{\r\n    \r\n    if(matchCoins.length>0){\r\n      console.log(\"inside\",matchCoins)\r\n    }\r\n  },[matchCoins])\r\n  const suggestionSelectedValue=(value)=>{\r\n      setValue(value)\r\n      setMatchCoins([])\r\n      history.push(`/coins/${value}`)\r\n  }\r\n\r\n  \r\n  \r\n  // useEffect(() => {\r\n  //   document.addEventListener(\"mousedown\", handleClick);\r\n  //   return () => {\r\n  //     document.removeEventListener(\"mousedown\", handleClick);\r\n  //   };\r\n  // }, []);\r\n  \r\n  \r\n  \r\n  const renderSuggestions=()=>{\r\n    if(matchCoins.length<=0){\r\n      console.log(matchCoins)\r\n      return <div className=\"ListCoinsNoRecord\" id=\"ListCoins\" ref={node}>\r\n          <p>No record found</p>\r\n        </div>\r\n        \r\n    }\r\n    else{\r\n      console.log(matchCoins.length)\r\n      return  <div  className=\"ListCoins\" id=\"ListCoins\" ref={node}>\r\n        {\r\n          \r\n          matchCoins.map((item)=>{\r\n          return  <p ref={elem} id=\"pval\" className=\"autoSuggestValues\" onClick={()=>suggestionSelectedValue(item)} style={{padding:'5px 10px',borderRadius: '15px',maxWidth: '100%',margin:' 5px 15px',cursor:'pointer'}}>\r\n                       {item}\r\n                    </p>\r\n                  \r\n            })\r\n        }\r\n      </div>\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <div  id=\"searchBar\" >\r\n      <input value={value} type=\"text\" placeholder=\"Search Your Coin\" onChange={onTextChanged} className=\"searchCoinInput\"/>\r\n      {value.length>0 && \r\n        \r\n          \r\n          renderSuggestions()\r\n        \r\n      }\r\n        <span id=\"searchIcon\">\r\n          <Icon icon={searchAlt} style={{color: '#7666E4',fontSize: '30px'}} hFlip={true} />\r\n        </span>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps=(state)=>{\r\n  console.log(\"called from mapStatetoProps\",state.CoinListReducers)\r\n  return{\r\n    coinListData:state.CoinListReducers?state.CoinListReducers.autoSuggestData:null\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\nreturn{\r\n  getAutoSuggestList:()=>dispatch(getAllCoinDataForAutoSuggest())\r\n}\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Autosuggest)\r\n","D:\\react-cryptocurrency-app\\src\\Components\\Paginate.js",["109"],"import React from 'react'\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nconst Paginate = (props) => {\r\n    \r\n    return (\r\n        <ReactPaginate\r\n                previousLabel={\"prev\"}\r\n                nextLabel={\"next\"}\r\n                breakLabel={\"...\"}\r\n                breakClassName={\"break-me\"}\r\n                pageCount={props.totalCount/20}\r\n                pageRangeDisplayed={2}\r\n                marginPagesDisplayed={1}\r\n                containerClassName={\"pagination\"}\r\n                onPageChange={props.handlePageClick}\r\n                containerClassName={\"pagination\"}\r\n                subContainerClassName={\"pages pagination\"}\r\n                activeClassName={\"active\"}\r\n                />\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","D:\\react-cryptocurrency-app\\src\\Containers\\Navbar.js",["110","111","112","113","114","115","116","117","118","119","120","121","122"],"import React,{useState,useEffect} from 'react'\r\nimport Navbar from  'react-bootstrap/Navbar'\r\nimport {Button,Form,FormControl} from 'react-bootstrap'\r\nimport Autosuggest from '../Components/Autosuggest'\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\nimport sunF from '@iconify/icons-jam/sun-f';\r\nimport moonSolid from '@iconify/icons-clarity/moon-solid';\r\nimport '../CSS/Navbar.css'\r\nimport '../CSS/toggle.css';\r\nimport image from '../Images/Logo.png'\r\nimport { useHistory,useLocation } from \"react-router-dom\";\r\n\r\nimport { setTheme   } from '../Components/Theme-context'\r\n\r\nconst NavbarTitle = (props) => {\r\n    \r\n  let history = useHistory();\r\n  const location = useLocation();\r\n  const pathName = location.pathname;\r\n  useEffect(()=>{\r\n    console.log(\"props\",pathName)\r\n  },[])\r\n  // const location=props && props.history && props.history.location.pathName\r\n  const [search,setSearch]=useState(\"\")\r\n  const [isToggleOn,setIsToggleOn]=useState('dark')\r\n  let theme = localStorage.getItem('theme');\r\n  console.log(theme)\r\n    const handleClick=()=>{\r\n      if (localStorage.getItem('theme') === 'theme-dark') {\r\n        setTheme('theme-light');\r\n        setIsToggleOn('light')\r\n        console.log(isToggleOn)\r\n    } else {\r\n        setTheme('theme-dark');\r\n        setIsToggleOn('dark')\r\n    }\r\n      }\r\n\r\n      useEffect(() => {\r\n        if (localStorage.getItem('theme') === 'theme-dark') {\r\n          setIsToggleOn('dark')\r\n        } else if (localStorage.getItem('theme') === 'theme-light') {\r\n          setIsToggleOn('light')\r\n        }\r\n    }, [theme])\r\n    return (\r\n        <>\r\n        <Navbar expand=\"lg\" className=\"navbar align-items-center\">\r\n            <Navbar.Brand href=\"/\"> \r\n              <img src={image} style={{width:'100%',filter:'invert(1)'}}/>\r\n            </Navbar.Brand>\r\n            \r\n                <div style={{display:'flex'}} className=\"AutoSuggestandtoggle\">\r\n                  {\r\n                    pathName=='/' && <Autosuggest coinId={props.coinId}/>\r\n                  }\r\n                \r\n                <span>\r\n                <div className={isToggleOn=='light' ? 'toggleSwitch' :'toggleSwitchDark'} onClick={handleClick} >\r\n                <div className={isToggleOn=='light' ? 'knobDark' : 'knobLight'} />\r\n                {\r\n                isToggleOn=='light' ? <Icon icon={sunF} style={{color: '#DBCA2F', fontSize: '30px'}} hFlip={true} className=\"sunIcon\"/> : <Icon icon={moonSolid} style={{color: '#DBCA2F', fontSize: '30px'}} className=\"moonIcon\" />\r\n                }\r\n                </div>\r\n                </span>\r\n                </div>\r\n\r\n                \r\n                \r\n                \r\n            \r\n        </Navbar>\r\n\r\n\r\n\r\n\r\n        {/* <nav style={{background:'#2c1f95'}}>\r\n            <img src=\"https://lh3.google.com/u/0/d/1i9DqfcP0c4TQMcrBeSy6J83nL5FiZDPe=w1904-h947-iv1\" style={{maxWidth:\"10%\",width:'100%',filter:'invert(1)'}}/>\r\n            <form>\r\n            <input type=\"text\" placeholder=\"Search your cryptocurrency\" className=\"coin-input\" onChange={handleInput}/>\r\n          </form>\r\n\r\n        </nav> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NavbarTitle\r\n","D:\\react-cryptocurrency-app\\src\\Containers\\CoinsList.js",["123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145"],"import React,{useEffect,useState} from 'react'\r\nimport Table from 'react-bootstrap/Table';\r\nimport { Container,Button,Row,Col } from 'react-bootstrap';\r\nimport Coin from './Coin'\r\nimport '../CSS/Paginate.css' \r\nimport {connect} from 'react-redux'\r\nimport {getAllCoinList,getCoinChartData,getAllCoinDataForAutoSuggest} from '../Store/Actions/Actions'\r\nimport ReactPaginate from \"react-paginate\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Paginate from '../Components/Paginate'\r\nimport Autosuggest from '../Components/Autosuggest'\r\nimport { forEach } from 'lodash';\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\nimport bxSort from '@iconify/icons-bx/bx-sort';\r\nimport arrowSort24Filled from '@iconify/icons-fluent/arrow-sort-24-filled';\r\nimport '../CSS/Homepage.css'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport styled from \"styled-components\";\r\nconst options = [\"Ascending\", \"Descending\"];\r\n\r\nconst CoinsList = (props) => {\r\n// URL:https://api.coingecko.com/api/v3/coins/markets?vs_currency=inr&order=market_cap_desc&per_page=100&page=1&sparkline=false\r\nconst {coinList,totalCount,loader}=props\r\n\r\nconst [offset,setOffset]=useState(0)\r\nconst [perPage,setPerPage]=useState(100)\r\nconst [currentPage,setCurrentPage]=useState(0)\r\nconst [pageCount,setPageCount]=useState(0)\r\nconst [tableData,setTableData]=useState([])\r\nconst [orgTableData,setOrgTableData]=useState([])\r\nconst [sortType,setSortType]=useState('asc')\r\nconst [count,setCount]=useState(0)\r\nconst [isOpen, setIsOpen] = useState(false);\r\nconst [selectedOption, setSelectedOption] = useState(null);\r\nconst [sortOption,setSortOption]=useState('Ascending')\r\nconst location = useLocation()\r\n\r\nconst toggling = () => {\r\n  setIsOpen(!isOpen)\r\n  // changeOrder()\r\n};\r\n\r\n// const handleSortOption=()=>{\r\n//   if(selectedOption==\"Ascending\"){\r\n//     setSelectedOption('Descending')\r\n//   }\r\n//   else{\r\n//     setSelectedOption('Ascending')\r\n//   }\r\n// }\r\n\r\nconst onOptionClicked = value => () => {\r\n  setSelectedOption(value);\r\n  setIsOpen(false);\r\n  console.log(selectedOption);\r\n changeOrder()\r\n};\r\nconst changeOrder=()=>{\r\n  sortType==='asc'?setSortType('desc'):setSortType('asc')\r\n  // sortType==='asc' ?setSelectedOption('Ascending'):setSelectedOption('Descending')\r\n}\r\n\r\n\r\nuseEffect(()=>{\r\n  sortType==='asc' ?setSortOption('Ascending'):setSortOption('Descending')\r\n},[sortType])\r\n\r\n \r\nconst sorted=tableData.sort((a,b)=>{\r\n  const isReversed=(sortType==='asc')?1:-1\r\n  return isReversed*a.name.localeCompare(b.name)\r\n})\r\nconst handlePageClick=(page)=>{\r\n  props.getList(page)\r\n  // alert(\"hello\")\r\n  setCount(page)\r\n}\r\n\r\nconst history = useHistory();\r\nconst handleClick=()=> {\r\n        // history.push(`/coins/${tableData.id}`);\r\n        \r\n      }\r\nconst getData=()=> {\r\n  var tdata = coinList;\r\n  var slice = tdata.slice(offset, offset + perPage)\r\n  setPageCount(Math.ceil(tdata.length / perPage))\r\n  setTableData(slice)\r\n  setOrgTableData(tdata)\r\n};\r\n// const renderList=()=>{\r\n//   return <>\r\n//     <optio  style={{padding:'5px',margin:'0'}}>Ascending</optio>\r\n//     <p  style={{padding:'5px',margin:'0'}}>Descending</p>\r\n//   </>\r\n// }\r\nconst getTableData=()=>{\r\nreturn sorted.map((coinid,index)=>{\r\n\r\nconst idkey=(count-1)*sorted.length+index+1;\r\nreturn (<tr onClick={()=>{\r\n  history.push(`/coins/${coinid.id}`)\r\n}}><Coin \r\nkey={coinid.id} \r\nid={idkey}\r\nname={coinid.name} \r\nimage={coinid.image} \r\nsymbol={coinid.symbol.toUpperCase()} \r\nvolume={coinid.total_volume.toLocaleString()}\r\nprice={coinid.current_price.toLocaleString()}\r\npriceChange={coinid.price_change_percentage_24h}\r\nmarketcap={coinid.market_cap.toLocaleString()}\r\nrealId={coinid.id}\r\n// sparkline={coinid.market_cap_rank}\r\n/></tr>)\r\n})};\r\n\r\nuseEffect(()=>{\r\n  handlePageClick(1)\r\n  // props.getAutoSuggestList()\r\n  \r\n  },[])\r\n\r\nuseEffect(()=>{\r\n  if(coinList){\r\n    getData()\r\n  }\r\n},[coinList])\r\n\r\n\r\n// useEffect(()=>{\r\n//   console.log(props.coinListData)\r\n// },[props.coinListData])\r\n// useEffect(()=>{\r\n//   var table = document.getElementsByTagName('table')\r\n//   var rows = table.getElementByTagName('tr')\r\n// console.log(\"table rows are\",rows)\r\n// },[tableData])\r\n\r\n  \r\n    return (\r\n        <div className=\"coin-app\" style={{overflow:'auto'}}>\r\n            <div className=\"sortDiv\">\r\n                <span className=\"sortText\">Sort In</span>\r\n                <span className=\"sortoptionContainer\" onClick={changeOrder}>{sortOption}\r\n                <span><Icon icon={arrowSort24Filled}  id=\"sortArrow\"/></span>\r\n                </span>\r\n                \r\n          </div>\r\n         \r\n        <Container fluid style={{margin:'35px 0px'}}>\r\n        \r\n        \r\n{!loader ?\r\n\r\n        <Table striped bordered hover id=\"coinTable\" responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Coin</th>\r\n            <th>Symbol</th>\r\n            <th>Price</th>\r\n            <th>Volume</th>\r\n            <th>Market Cap</th>\r\n            <th>PriceChange</th>\r\n            {/* <th>Action</th> */}\r\n          </tr>\r\n        </thead>\r\n       <tbody>\r\n      \r\n        {getTableData()}\r\n       </tbody>\r\n            \r\n  \r\n  \r\n          </Table>:\r\n\r\n          <Loader type=\"Grid\" color=\"#7666e4\" height={80} width={80} style={{'justify-content':'center','display':'flex'}} />}\r\n          \r\n          <Paginate totalCount={totalCount} handlePageClick={(Data)=>handlePageClick(Data.selected+1)}/>\r\n        </Container>\r\n        \r\n      </div>\r\n    )\r\n}\r\nconst mapStateToProps=(state)=>{\r\n  // console.log(\"called from mapStatetoProps\",state.CoinListReducers)\r\n  return{\r\n    coinList: state.CoinListReducers ? state.CoinListReducers.orgcoinList :null,\r\n    totalCount: state.CoinListReducers ? state.CoinListReducers.count :null,\r\n    loader:state.CoinListReducers? state.CoinListReducers.loading:null,\r\n    coinListData:state.CoinListReducers?state.CoinListReducers.autoSuggestData:null\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\nreturn{\r\n  getList:(page)=>dispatch(getAllCoinList(page)),\r\n  getAutoSuggestList:()=>dispatch(getAllCoinDataForAutoSuggest())\r\n}\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CoinsList)\r\n","D:\\react-cryptocurrency-app\\src\\Containers\\SingleCoin.js",["146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163"],"import React,{useEffect,useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport ReactHighcharts from 'react-highcharts/ReactHighstock.src'\r\nimport Loader from \"react-loader-spinner\";\r\nimport {Breadcrumb,Row,Col,Container,Card,Button,Badge,Table} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport  {getSingleCoinData,getCoinChartData} from '../Store/Actions/Actions'\r\nimport {withGetScreen} from 'react-getscreen'\r\nimport {useLocation} from 'react-router-dom'\r\nimport '../CSS/singlecoin.css'\r\nconst SingleCoin = (props) => {\r\n\r\nconst id=props.match.params.id\r\nconst options = {style: 'currency', currency: 'USD'};\r\nconst numberFormat = new Intl.NumberFormat('en-US', options);\r\nconst [percentageChange,setPercentageChange] =useState('')\r\n// useEffect(() => {\r\n//   window.addEventListener('resize', () => {\r\n//     const myWidth  = window.innerWidth;\r\n    \r\n//     document.getElementsByClassName('highcharts-container').style.width=myWidth\r\n//     console.log('my width :::', myWidth)\r\n//  })\r\n// },[window])\r\n\r\n// useEffect(()=>{\r\n// const x = props.ChartDataPrice ? document.getElementById('highcharts-3ub2489-0').style.width=\"30%\" : \"hello there\"\r\n// console.log(x)\r\n// },[window.innerWidth])\r\nuseEffect(()=>{\r\n  props.getSingleCoinData(id) \r\n},[])\r\n// useEffect(()=>{\r\n//   configPrice.setSize(600, 300);\r\n// },[])\r\nuseEffect(()=>{\r\n  props.getCoinChartData(id,'usd','max')\r\n\r\n},[])\r\n\r\nconst initValues={\r\n  coinName:props.singlecoinData ? props.singlecoinData.name: \"hello\" \r\n}\r\nconst [values,setValues]=useState(initValues)\r\n// const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\nconst {coinName}=values\r\nuseEffect(()=>{\r\n  console.log(values)\r\n},[id])\r\nconst configPrice = props.ChartDataPrice ? {    \r\n  yAxis: [{\r\n    offset: 20,\r\n    labels: {\r\n      formatter: function () {\r\n        return numberFormat.format(this.value) \r\n      },\r\n      x: -15,\r\n      style: {\r\n        \"color\": \"#000\", \"position\": \"absolute\"\r\n      },\r\n      align: 'left'\r\n    },\r\n  },\r\n  ],\r\n  \r\n  tooltip: {\r\n    shared: true,\r\n    formatter: function () {\r\n      return numberFormat.format(this.y, 0) +  '</b><br/>' + moment(this.x).format('MMMM Do YYYY, h:mm')\r\n    }\r\n  },\r\n  plotOptions: {\r\n    series: {\r\n      showInNavigator: true,\r\n      gapSize: 6,\r\n    }\r\n  },\r\n  rangeSelector: {\r\n    selected: 1\r\n  },\r\n  chart: {\r\n    height: 600,\r\n    \r\n    \r\n  },\r\n  credits: {\r\n    enabled: false\r\n  },\r\n  legend: {\r\n    enabled: true\r\n  },\r\n  xAxis: {\r\n    type: 'date',\r\n  },\r\n  rangeSelector: {\r\n    buttons: [{\r\n      type: 'day',\r\n      count: 1,\r\n      text: '1d',\r\n    }, {\r\n      type: 'day',\r\n      count: 7,\r\n      text: '7d'\r\n    }, {\r\n      type: 'month',\r\n      count: 1,\r\n      text: '1m'\r\n    }, {\r\n      type: 'month',\r\n      count: 3,\r\n      text: '3m'\r\n    },\r\n      {\r\n      type: 'all',\r\n      text: 'All'\r\n    }],\r\n    selected: 4\r\n  },\r\n  series: [{\r\n    name: 'Price',\r\n    type: 'spline',\r\n\r\n    data: props.ChartDataPrice.prices,\r\n    tooltip: {\r\n      valueDecimals: 2\r\n    },\r\n  }\r\n  ],\r\n  responsive: {\r\n    rules: [{\r\n        condition: {\r\n         \r\n            maxWidth: 700\r\n        },\r\n        chartOptions: {\r\n            chart: {\r\n                height: 600,\r\n               \r\n            },\r\n            subtitle: {\r\n                text: null\r\n            },\r\n            navigator: {\r\n                enabled: false\r\n            }\r\n        }\r\n    }]\r\n}\r\n}:\"loading...\"\r\n\r\n \r\n  const style=props.singlecoinData && props.singlecoinData.market_data.price_change_percentage_24h<0?'red':'green'\r\n  const style7=props.singlecoinData && props.singlecoinData.market_data.price_change_percentage_7d<0?'red':'green'\r\n  const style14=props.singlecoinData && props.singlecoinData.market_data.price_change_percentage_14d<0?'red':'green'\r\n  const style30=props.singlecoinData && props.singlecoinData.market_data.price_change_percentage_30d<0?'red':'green'\r\n  const style1y=props.singlecoinData && props.singlecoinData.market_data.price_change_percentage_1y<0?'red':'green'\r\n  const style2=props.singlecoinData && props.singlecoinData.market_data.ath_change_percentage.usd<0?'red':'green'\r\n  const style3=props.singlecoinData && props.singlecoinData.market_data.atl_change_percentage.usd<0?'red':'green'\r\n  \r\n    return (\r\n      \r\n      <div>\r\n        \r\n        {/* bread crumbds started */}\r\n        <Breadcrumb>\r\n        <Breadcrumb.Item ><Link to=\"/\">Home</Link></Breadcrumb.Item>\r\n        <Breadcrumb.Item >\r\n            {id}\r\n        </Breadcrumb.Item>       \r\n      </Breadcrumb>\r\n      {/* breadcrumb ended */}\r\n  \r\n\r\n      {!props.loader && props.singlecoinData && props.ChartDataPrice?\r\n      <div className=\"grid-container\">\r\n        <div className=\"space\"> </div>\r\n        <Card className=\"card1\">\r\n          <Card.Body >\r\n            <Row style={{alignItems:'center'}}>\r\n              <Col className=\"d-flex\" xs={12}>\r\n              <Card.Title style={{padding:'0px 10px'}}><img src={props.singlecoinData.image.thumb}/></Card.Title>\r\n              <Card.Title>{props.singlecoinData.name}({props.singlecoinData.symbol})</Card.Title>  \r\n              </Col>\r\n              \r\n            </Row>\r\n            \r\n            <Card.Text>\r\n\r\n              <Row>\r\n                <Col md={3}auto className=\"d-flex\">\r\n                  <p>{props.singlecoinData.market_data.current_price.usd}</p>\r\n                </Col>\r\n                <Col md={9} className=\"d-flex percentageVal\">\r\n                  <p style={{color:style}}>{props.singlecoinData.market_data.price_change_percentage_24h}%</p>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col md={3}className=\"left-wrapper\">\r\n                  <p >Homepage</p>\r\n                </Col>\r\n                <Col md={9}  className=\" right-wrapper d-flex\">\r\n               \r\n                  {props.singlecoinData.links.homepage.map((item)=>{             \r\n                    const val=item!='' && item.split('/')[2].split('.')\r\n                    \r\n                    return(\r\n                      item!=''&& <p><Badge style={{padding:'5px 10px',margin:'0px 5px'}}  ><a style={{color:'white'}} href={item}>{val.length=='2'?val[0]:val[1]}</a></Badge></p>\r\n                      )\r\n                    })}\r\n                  \r\n                </Col>\r\n              </Row>\r\n              <Row className=\"flex-nowrap\">\r\n                <Col md={3} className=\"left-wrapper\">\r\n                  <p >Websites</p>\r\n                </Col>\r\n                <Col md={9} className=\"d-flex right-wrapper\">\r\n                  \r\n                    {props.singlecoinData.links.blockchain_site.map((item)=>{  \r\n                      const val=item!='' && item.split('/')[2].split('.')[0]     \r\n                      return(\r\n                        item!=''&& <p><Badge style={{padding:'5px 10px',margin:'0px 5px'}}  ><a style={{color:'white'}} href={item}>{val}</a></Badge></p>\r\n                        )\r\n                      })}\r\n                   \r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"flex-nowrap\">\r\n                <Col md={3} className=\"left-wrapper \">\r\n                  <p>Community</p>\r\n                </Col>\r\n                <Col md={9} className=\"d-flex right-wrapper\">\r\n                  \r\n                    <p><Badge style={{padding:'5px 10px',margin:'0px 5px'}} ><a style={{color:'white'}} href={`https://twitter.com/${props.singlecoinData.links.twitter_screen_name}`}>Twitter</a></Badge></p>\r\n\r\n                    <p><Badge style={{padding:'5px 10px',margin:'0px 5px'}}  ><a style={{color:'white'}} href={props.singlecoinData.links.subreddit_url}>Reddit</a></Badge></p>\r\n\r\n                    <p><Badge style={{padding:'5px 10px',margin:'0px 5px'}}  ><a style={{color:'white'}} href={`https://www.facebook.com/${props.singlecoinData.links.facebook_username}/`}>Facebook</a></Badge></p>\r\n\r\n                    <p><Badge style={{padding:'5px 10px',margin:'0px 5px'}}  ><a style={{color:'white'}} href={props.singlecoinData.links.official_forum_url[0]}>bitcointalk.org</a></Badge></p>\r\n                 \r\n                </Col>\r\n                  \r\n\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col md={3} className=\"left-wrapper\">\r\n                  <p>Github</p>\r\n                </Col>\r\n                <Col md={9}className=\"right-wrapper d-flex\">\r\n                  <p><Badge style={{padding:'5px 10px',margin:'0px 5px'}}  ><a style={{color:'white'}} href={props.singlecoinData.links.repos_url.github[0]}>Github</a></Badge></p>\r\n                </Col>\r\n              </Row>\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        <Card  className=\"card2\">\r\n              <Card.Body>\r\n                <Card.Title style={{textTransform:'capitalize'}}> {id} Market Stats</Card.Title>\r\n                <Card.Text id=\"market_data\">\r\n                  <p>Market Cap<span>{props.singlecoinData.market_data.market_cap.usd}</span></p> \t\r\n                  <p>Trading Volume<span>{props.singlecoinData.market_data.total_volume.usd.toLocaleString()}</span></p>\r\n                  <p>Volume / Market Cap<span>{\r\n                    (Number(props.singlecoinData.market_data.total_volume.usd)/\r\n                    Number(props.singlecoinData.market_data.market_cap.usd)).toFixed(3)\r\n                  }</span></p>\r\n                  <p>24h Low / 24h High<span>{props.singlecoinData.market_data.low_24h.usd}/{props.singlecoinData.market_data.high_24h.usd}</span></p>\r\n                  <p>Market Cap Rank<span>{props.singlecoinData.market_cap_rank}</span></p>\r\n                  <p>All-Time High\t<span><span>{props.singlecoinData.market_data.ath.usd}</span><span style={{color:style2}}>({props.singlecoinData.market_data.ath_change_percentage.usd}%)</span></span></p>\r\n                  <p>All-Time Low<span><span>{props.singlecoinData.market_data.atl.usd}</span><span style={{color:style3}}>\r\n                  ({props.singlecoinData.market_data.atl_change_percentage.usd}%)</span></span></p>\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n\r\n                  <div className=\"graph\">\r\n            <ReactHighcharts config = {configPrice} options={options} idomProps = {{id: 'chartId'}} containerProps = {{ className: 'chartContainer'}} />\r\n\r\n                  </div>\r\n\r\n            \r\n            <Table bordered  className=\"Datatable\">\r\n           <thead>\r\n             <tr>\r\n             \r\n             <th>24h</th>\r\n             <th>7d</th>\r\n             <th>14d</th>\r\n             <th>30d</th>\r\n             <th>1y</th>\r\n             </tr>\r\n           </thead>\r\n           <tbody>\r\n             <tr>\r\n                 <td style={{color:style}}>{props.singlecoinData.market_data.price_change_percentage_24h}%</td>\r\n                 <td style={{color:style7}}>{props.singlecoinData.market_data.price_change_percentage_7d}%</td>\r\n                 <td style={{color:style14}}>{props.singlecoinData.market_data.price_change_percentage_14d}%</td>\r\n                 <td style={{color:style30}}>{props.singlecoinData.market_data.price_change_percentage_30d}%</td>\r\n                 <td style={{color:style1y}}>{props.singlecoinData.market_data.price_change_percentage_1y}%</td>\r\n             </tr>\r\n           </tbody>\r\n         </Table>\r\n            <div className=\"space\"> </div>\r\n      </div>\r\n        :\r\n        <Loader type=\"Grid\" color=\"#7666e4\" height={80} width={80} style={{'justify-content':'center','display':'flex'}} />\r\n      }\r\n      </div>\r\n    )\r\n}\r\nconst mapStateToProps=(state)=>{\r\n  return{\r\n    singlecoinData: state.CoinListReducers ? state.CoinListReducers.singlecoinData.data :null,\r\n    ChartDataPrice: state.CoinListReducers ? state.CoinListReducers.chartData.data :null,\r\n    loader:state.CoinListReducers? state.CoinListReducers.loading:null\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n  return{\r\n    getSingleCoinData:(id)=>dispatch(getSingleCoinData(id)),\r\n    getCoinChartData:(id,cur,time)=>dispatch(getCoinChartData(id,cur,time))\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SingleCoin)\r\n","D:\\react-cryptocurrency-app\\src\\Components\\Theme-context.js",[],"D:\\react-cryptocurrency-app\\src\\Store\\Actions\\ActionType.js",[],"D:\\react-cryptocurrency-app\\src\\Containers\\Coin.js",["164","165","166"],"import React from 'react'\r\nimport '../CSS/Coin.css'\r\nimport {Button}  from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useEffect } from 'react'\r\nconst Coin = ({id,name,image,symbol,price,volume,priceChange,marketcap}) => {\r\n    const style=priceChange<0?'red':'#1bb31b'\r\n    return (\r\n    <>\r\n        <td >{id}</td>\r\n        <td>\r\n          <span>\r\n            <img src={image} alt=\"\" style={{width:\"100%\",maxWidth:\"35px\",marginRight:\"2em\"}}/>   \r\n                {name}\r\n            </span>\r\n        </td>\r\n        <td>\r\n            {symbol}\r\n        </td>\r\n        <td>${price}</td>\r\n        <td>${volume}</td>\r\n        <td>${marketcap}</td>\r\n        <td style={{color:style}}>{priceChange}%</td>\r\n        </>)\r\n  \r\n\r\n        \r\n               \r\n    \r\n}\r\n\r\nexport default Coin\r\n","D:\\react-cryptocurrency-app\\src\\Containers\\Footer.js",["167","168"],"import React from 'react'\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"d-flex align-items-center justify-content-around py-2 px-2 footer\" style={{background:'#7666E4'}}>\r\n            <div>\r\n                Created by Ashvinjeet Singh\r\n                <span id=\"year\">&copy; {new Date().getFullYear()}</span>\r\n            </div>\r\n            <span><a href=\"https://github.com/AshvinjeetSingh/Crypto-tracker\" style={{color:'#fff'}}><i class=\"fa fa-github\" style={{fontSize:'36px'}}></i></a></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","D:\\react-cryptocurrency-app\\src\\Store\\Sagas\\index.js",[],"D:\\react-cryptocurrency-app\\src\\Store\\Reducers\\RootReducer.js",[],"D:\\react-cryptocurrency-app\\src\\Store\\Actions\\Actions.js",[],"D:\\react-cryptocurrency-app\\src\\Store\\Sagas\\coinlist-saga.js",[],"D:\\react-cryptocurrency-app\\src\\Store\\Reducers\\index.js",[],"D:\\react-cryptocurrency-app\\src\\Store\\store.js",[],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":7,"column":15,"nodeType":"175","messageId":"176","endLine":7,"endColumn":21},{"ruleId":"173","severity":1,"message":"177","line":1,"column":8,"nodeType":"175","messageId":"176","endLine":1,"endColumn":13},{"ruleId":"173","severity":1,"message":"178","line":3,"column":9,"nodeType":"175","messageId":"176","endLine":3,"endColumn":13},{"ruleId":"173","severity":1,"message":"179","line":3,"column":14,"nodeType":"175","messageId":"176","endLine":3,"endColumn":17},{"ruleId":"173","severity":1,"message":"180","line":6,"column":10,"nodeType":"175","messageId":"176","endLine":6,"endColumn":14},{"ruleId":"173","severity":1,"message":"181","line":9,"column":9,"nodeType":"175","messageId":"176","endLine":9,"endColumn":18},{"ruleId":"173","severity":1,"message":"182","line":10,"column":8,"nodeType":"175","messageId":"176","endLine":10,"endColumn":11},{"ruleId":"173","severity":1,"message":"183","line":11,"column":10,"nodeType":"175","messageId":"176","endLine":11,"endColumn":13},{"ruleId":"173","severity":1,"message":"184","line":12,"column":8,"nodeType":"175","messageId":"176","endLine":12,"endColumn":17},{"ruleId":"173","severity":1,"message":"185","line":15,"column":8,"nodeType":"175","messageId":"176","endLine":15,"endColumn":17},{"ruleId":"186","severity":1,"message":"187","line":23,"column":31,"nodeType":"188","messageId":"189","endLine":23,"endColumn":33},{"ruleId":"190","severity":1,"message":"191","line":34,"column":26,"nodeType":"192","messageId":"193","endLine":34,"endColumn":28},{"ruleId":"186","severity":1,"message":"187","line":34,"column":34,"nodeType":"188","messageId":"189","endLine":34,"endColumn":36},{"ruleId":"190","severity":1,"message":"191","line":34,"column":47,"nodeType":"192","messageId":"193","endLine":34,"endColumn":49},{"ruleId":"186","severity":1,"message":"187","line":62,"column":29,"nodeType":"188","messageId":"189","endLine":62,"endColumn":31},{"ruleId":"190","severity":1,"message":"191","line":75,"column":24,"nodeType":"192","messageId":"193","endLine":75,"endColumn":26},{"ruleId":"186","severity":1,"message":"187","line":75,"column":32,"nodeType":"188","messageId":"189","endLine":75,"endColumn":34},{"ruleId":"190","severity":1,"message":"191","line":75,"column":45,"nodeType":"192","messageId":"193","endLine":75,"endColumn":47},{"ruleId":"194","severity":1,"message":"195","line":115,"column":5,"nodeType":"196","endLine":115,"endColumn":7,"suggestions":"197"},{"ruleId":"194","severity":1,"message":"198","line":121,"column":5,"nodeType":"196","endLine":121,"endColumn":25,"suggestions":"199"},{"ruleId":"200","severity":1,"message":"201","line":17,"column":17,"nodeType":"202","endLine":17,"endColumn":50},{"ruleId":"173","severity":1,"message":"203","line":3,"column":9,"nodeType":"175","messageId":"176","endLine":3,"endColumn":15},{"ruleId":"173","severity":1,"message":"178","line":3,"column":16,"nodeType":"175","messageId":"176","endLine":3,"endColumn":20},{"ruleId":"173","severity":1,"message":"204","line":3,"column":21,"nodeType":"175","messageId":"176","endLine":3,"endColumn":32},{"ruleId":"173","severity":1,"message":"205","line":5,"column":16,"nodeType":"175","messageId":"176","endLine":5,"endColumn":26},{"ruleId":"173","severity":1,"message":"206","line":17,"column":7,"nodeType":"175","messageId":"176","endLine":17,"endColumn":14},{"ruleId":"194","severity":1,"message":"207","line":22,"column":5,"nodeType":"196","endLine":22,"endColumn":7,"suggestions":"208"},{"ruleId":"173","severity":1,"message":"209","line":24,"column":10,"nodeType":"175","messageId":"176","endLine":24,"endColumn":16},{"ruleId":"173","severity":1,"message":"210","line":24,"column":17,"nodeType":"175","messageId":"176","endLine":24,"endColumn":26},{"ruleId":"211","severity":1,"message":"212","line":50,"column":15,"nodeType":"213","endLine":50,"endColumn":75},{"ruleId":"186","severity":1,"message":"214","line":55,"column":29,"nodeType":"188","messageId":"189","endLine":55,"endColumn":31},{"ruleId":"186","severity":1,"message":"214","line":59,"column":43,"nodeType":"188","messageId":"189","endLine":59,"endColumn":45},{"ruleId":"186","severity":1,"message":"214","line":60,"column":43,"nodeType":"188","messageId":"189","endLine":60,"endColumn":45},{"ruleId":"186","severity":1,"message":"214","line":62,"column":27,"nodeType":"188","messageId":"189","endLine":62,"endColumn":29},{"ruleId":"173","severity":1,"message":"203","line":3,"column":20,"nodeType":"175","messageId":"176","endLine":3,"endColumn":26},{"ruleId":"173","severity":1,"message":"179","line":3,"column":27,"nodeType":"175","messageId":"176","endLine":3,"endColumn":30},{"ruleId":"173","severity":1,"message":"215","line":3,"column":31,"nodeType":"175","messageId":"176","endLine":3,"endColumn":34},{"ruleId":"173","severity":1,"message":"216","line":7,"column":24,"nodeType":"175","messageId":"176","endLine":7,"endColumn":40},{"ruleId":"173","severity":1,"message":"217","line":8,"column":8,"nodeType":"175","messageId":"176","endLine":8,"endColumn":21},{"ruleId":"173","severity":1,"message":"218","line":11,"column":8,"nodeType":"175","messageId":"176","endLine":11,"endColumn":19},{"ruleId":"173","severity":1,"message":"219","line":12,"column":10,"nodeType":"175","messageId":"176","endLine":12,"endColumn":17},{"ruleId":"173","severity":1,"message":"205","line":13,"column":16,"nodeType":"175","messageId":"176","endLine":13,"endColumn":26},{"ruleId":"173","severity":1,"message":"220","line":14,"column":8,"nodeType":"175","messageId":"176","endLine":14,"endColumn":14},{"ruleId":"173","severity":1,"message":"221","line":19,"column":8,"nodeType":"175","messageId":"176","endLine":19,"endColumn":14},{"ruleId":"173","severity":1,"message":"222","line":20,"column":7,"nodeType":"175","messageId":"176","endLine":20,"endColumn":14},{"ruleId":"173","severity":1,"message":"223","line":26,"column":15,"nodeType":"175","messageId":"176","endLine":26,"endColumn":24},{"ruleId":"173","severity":1,"message":"224","line":27,"column":16,"nodeType":"175","messageId":"176","endLine":27,"endColumn":26},{"ruleId":"173","severity":1,"message":"225","line":28,"column":8,"nodeType":"175","messageId":"176","endLine":28,"endColumn":19},{"ruleId":"173","severity":1,"message":"226","line":28,"column":20,"nodeType":"175","messageId":"176","endLine":28,"endColumn":34},{"ruleId":"173","severity":1,"message":"227","line":29,"column":8,"nodeType":"175","messageId":"176","endLine":29,"endColumn":17},{"ruleId":"173","severity":1,"message":"228","line":31,"column":8,"nodeType":"175","messageId":"176","endLine":31,"endColumn":20},{"ruleId":"173","severity":1,"message":"229","line":37,"column":7,"nodeType":"175","messageId":"176","endLine":37,"endColumn":15},{"ruleId":"173","severity":1,"message":"230","line":39,"column":7,"nodeType":"175","messageId":"176","endLine":39,"endColumn":15},{"ruleId":"173","severity":1,"message":"231","line":53,"column":7,"nodeType":"175","messageId":"176","endLine":53,"endColumn":22},{"ruleId":"173","severity":1,"message":"232","line":81,"column":7,"nodeType":"175","messageId":"176","endLine":81,"endColumn":18},{"ruleId":"194","severity":1,"message":"233","line":123,"column":5,"nodeType":"196","endLine":123,"endColumn":7,"suggestions":"234"},{"ruleId":"194","severity":1,"message":"235","line":129,"column":3,"nodeType":"196","endLine":129,"endColumn":13,"suggestions":"236"},{"ruleId":"173","severity":1,"message":"237","line":5,"column":28,"nodeType":"175","messageId":"176","endLine":5,"endColumn":37},{"ruleId":"173","severity":1,"message":"203","line":5,"column":43,"nodeType":"175","messageId":"176","endLine":5,"endColumn":49},{"ruleId":"173","severity":1,"message":"238","line":9,"column":9,"nodeType":"175","messageId":"176","endLine":9,"endColumn":22},{"ruleId":"173","severity":1,"message":"239","line":10,"column":9,"nodeType":"175","messageId":"176","endLine":10,"endColumn":20},{"ruleId":"173","severity":1,"message":"240","line":17,"column":8,"nodeType":"175","messageId":"176","endLine":17,"endColumn":24},{"ruleId":"173","severity":1,"message":"241","line":17,"column":25,"nodeType":"175","messageId":"176","endLine":17,"endColumn":44},{"ruleId":"194","severity":1,"message":"242","line":33,"column":3,"nodeType":"196","endLine":33,"endColumn":5,"suggestions":"243"},{"ruleId":"194","severity":1,"message":"242","line":40,"column":3,"nodeType":"196","endLine":40,"endColumn":5,"suggestions":"244"},{"ruleId":"173","severity":1,"message":"245","line":45,"column":15,"nodeType":"175","messageId":"176","endLine":45,"endColumn":24},{"ruleId":"173","severity":1,"message":"246","line":47,"column":8,"nodeType":"175","messageId":"176","endLine":47,"endColumn":16},{"ruleId":"194","severity":1,"message":"247","line":50,"column":3,"nodeType":"196","endLine":50,"endColumn":7,"suggestions":"248"},{"ruleId":"249","severity":1,"message":"250","line":96,"column":3,"nodeType":"251","messageId":"189","endLine":96,"endColumn":16},{"ruleId":"211","severity":1,"message":"212","line":182,"column":56,"nodeType":"213","endLine":182,"endColumn":101},{"ruleId":"186","severity":1,"message":"187","line":206,"column":35,"nodeType":"188","messageId":"189","endLine":206,"endColumn":37},{"ruleId":"186","severity":1,"message":"187","line":209,"column":27,"nodeType":"188","messageId":"189","endLine":209,"endColumn":29},{"ruleId":"186","severity":1,"message":"214","line":209,"column":142,"nodeType":"188","messageId":"189","endLine":209,"endColumn":144},{"ruleId":"186","severity":1,"message":"187","line":222,"column":37,"nodeType":"188","messageId":"189","endLine":222,"endColumn":39},{"ruleId":"186","severity":1,"message":"187","line":224,"column":29,"nodeType":"188","messageId":"189","endLine":224,"endColumn":31},{"ruleId":"173","severity":1,"message":"203","line":3,"column":9,"nodeType":"175","messageId":"176","endLine":3,"endColumn":15},{"ruleId":"173","severity":1,"message":"180","line":4,"column":10,"nodeType":"175","messageId":"176","endLine":4,"endColumn":14},{"ruleId":"173","severity":1,"message":"252","line":5,"column":10,"nodeType":"175","messageId":"176","endLine":5,"endColumn":19},{"ruleId":"173","severity":1,"message":"253","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":14},{"ruleId":"173","severity":1,"message":"205","line":2,"column":16,"nodeType":"175","messageId":"176","endLine":2,"endColumn":26},"no-native-reassign",["254"],"no-negated-in-lhs",["255"],"no-unused-vars","'offset' is assigned a value but never used.","Identifier","unusedVar","'axios' is defined but never used.","'Form' is defined but never used.","'Row' is defined but never used.","'Link' is defined but never used.","'ListGroup' is defined but never used.","'API' is defined but never used.","'set' is defined but never used.","'SimpleBar' is defined but never used.","'Scrollbar' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["256"],"React Hook useEffect has a missing dependency: 'coins'. Either include it or remove the dependency array.",["257"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Button' is defined but never used.","'FormControl' is defined but never used.","'InlineIcon' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'pathName'. Either include it or remove the dependency array.",["258"],"'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '===' and instead saw '=='.","'Col' is defined but never used.","'getCoinChartData' is defined but never used.","'ReactPaginate' is defined but never used.","'Autosuggest' is defined but never used.","'forEach' is defined but never used.","'bxSort' is defined but never used.","'styled' is defined but never used.","'options' is assigned a value but never used.","'setOffset' is assigned a value but never used.","'setPerPage' is assigned a value but never used.","'currentPage' is assigned a value but never used.","'setCurrentPage' is assigned a value but never used.","'pageCount' is assigned a value but never used.","'orgTableData' is assigned a value but never used.","'location' is assigned a value but never used.","'toggling' is assigned a value but never used.","'onOptionClicked' is assigned a value but never used.","'handleClick' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handlePageClick'. Either include it or remove the dependency array.",["259"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["260"],"'Container' is defined but never used.","'withGetScreen' is defined but never used.","'useLocation' is defined but never used.","'percentageChange' is assigned a value but never used.","'setPercentageChange' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["261"],["262"],"'setValues' is assigned a value but never used.","'coinName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array.",["263"],"no-dupe-keys","Duplicate key 'rangeSelector'.","ObjectExpression","'useEffect' is defined but never used.","'Icon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"274","fix":"276"},{"desc":"277","fix":"278"},"Update the dependencies array to be: [props]",{"range":"279","text":"280"},"Update the dependencies array to be: [coins, props.coinListData]",{"range":"281","text":"282"},"Update the dependencies array to be: [pathName]",{"range":"283","text":"284"},"Update the dependencies array to be: [handlePageClick]",{"range":"285","text":"286"},"Update the dependencies array to be: [coinList, getData]",{"range":"287","text":"288"},"Update the dependencies array to be: [id, props]",{"range":"289","text":"290"},{"range":"291","text":"290"},"Update the dependencies array to be: [id, values]",{"range":"292","text":"293"},[3082,3084],"[props]",[3287,3307],"[coins, props.coinListData]",[784,786],"[pathName]",[3826,3828],"[handlePageClick]",[3889,3899],"[coinList, getData]",[1312,1314],"[id, props]",[1447,1449],[1747,1751],"[id, values]"]